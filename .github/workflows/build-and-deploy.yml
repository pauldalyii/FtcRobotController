# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Build & Deploy

env:
  TEAM_NAME: Botsmiths
  TEAM_NUMBER: 18693
  MAJOR_VERSION: 1
  MINOR_VERSION: 0
  BUILD_NUMBER: Updated-Later-In-Build
  ARTIFACT_NAME: Updated-Later-In-Build

on:
  push:
    branches: [main, develop, baseRobot]
  pull_request:
    branches: [main, develop]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        distribution: 'microsoft'
        java-version: '11'

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Set BUILD_NUMBER environment variable
      id: set-build-number
      run: |
        DATE=$(date +'%y%m')
        echo "BUILD_NUMBER=${{ env.MAJOR_VERSION }}.${{ env.MINOR_VERSION }}.${DATE}.${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV

    - name: Set ARTIFACT_NAME environment variable
      run: |
        echo "ARTIFACT_NAME=${{ env.TEAM_NAME }}-${{ env.TEAM_NUMBER }}-${{ env.BUILD_NUMBER }}" >> $GITHUB_ENV

    - name: Build with Gradle
      run: ./gradlew assembleRelease -PbuildNumber=${{ env.BUILD_NUMBER }}

    - name: Move apk to root and rename it
      run: |
        mv **/build/outputs/apk/release/TeamCode-release.apk ${{ env.ARTIFACT_NAME }}.apk
    
    - name: Pubish apk as an artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-output
        path: ${{ env.ARTIFACT_NAME }}.apk

    - name: Create release
      id: create_release
      if: github.ref == 'refs/heads/main'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_DEPLOYMENT_SECRET }}
      with:
        tag_name: ${{ env.BUILD_NUMBER }}
        release_name: Release ${{ env.BUILD_NUMBER }}
        draft: false
        prerelease: false
  
    - name: Upload release asset
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_DEPLOYMENT_SECRET }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.ARTIFACT_NAME }}.apk
        asset_name: ${{ env.ARTIFACT_NAME }}.apk
        asset_content_type: application/vnd.android.package-archive

  deploy:
    runs-on: self-hosted
    environment: 'production'
    needs: build
    steps:
      - name: Set BUILD_NUMBER environment variable
        id: set-build-number-linux
        run: |
          DATE=$(date +'%y%m')
          echo "BUILD_NUMBER=${{ env.MAJOR_VERSION }}.${{ env.MINOR_VERSION }}.${DATE}.${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV
  
      - name: Set ARTIFACT_NAME environment variable
        id: set-artifact-name-linux
        run: |
          echo "ARTIFACT_NAME=${{ env.TEAM_NAME }}-${{ env.TEAM_NUMBER }}-${{ env.BUILD_NUMBER }}" >> $GITHUB_ENV

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: ./build

      - name: List devices
        run: adb devices

      # Run adb commands to uninstall and install the APK on the specified device
      - name: Uninstall Previous APK
        continue-on-error: true
        run: adb -s ${{ vars.CONTROL_HUB_USB_SERIAL }} uninstall com.qualcomm.ftcrobotcontroller

      - name: Install New APK
        run: adb -s ${{ vars.CONTROL_HUB_USB_SERIAL }} install "./build/${{ env.ARTIFACT_NAME }}.apk"

      - name: Run APK
        run: adb shell am start -n com.qualcomm.ftcrobotcontroller/org.firstinspires.ftc.robotcontroller.internal.FtcRobotControllerActivity